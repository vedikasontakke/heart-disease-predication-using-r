setwd("~/vit/4TH SEM/Data science/CourseProject/updated cp")
library(shiny)
# Define UI
ui <- navbarPage(
title = "CardioInsights",
id = "tabs",
# Navigation bar
tabPanel("AdaBoost", value = "tab1",
# Content for Tab 1
sidebarPanel(
#HTML("<h3>Input parameters</h3>"),
tags$label(h3('AdaBoost')),
numericInput("Age",
label = "Age",
value = 40),
numericInput("Sex",
label = "Sex",
value = 1),
numericInput("ChestPainType",
label = "Chest Pain Type",
value = 1),
numericInput("RestingBP",
label = "Resting Blood Pressure",
value = 140),
numericInput("Cholesterol",
label = "Cholesterol",
value = 289),
numericInput("FastingBS",
label = "Fasting Blood Sugar",
value = 0),
numericInput("RestingECG",
label = "Resting ECG Results",
value = 1),
numericInput("MaxHR",
label = "Max Heart Rate Achived",
value = 172),
numericInput("ExerciseAngina",
label = "Exercise Induced Angina",
value = 0),
numericInput("Oldpeak",
label = "ST Depression Induced by Exercise (Old Peak)",
value = 0),
numericInput("ST_Slope",
label = "Slope of Peak Exercise ST Segment",
value = 0),
actionButton("submitbutton", "Submit",
class = "btn btn-primary")
)
),
tabPanel("Support Vector Machine", value = "tab2",
# Content for Tab 2
sidebarPanel(
#HTML("<h3>Input parameters</h3>"),
tags$label(h3('Support Vector Machine')),
numericInput("Age",
label = "Age",
value = 40),
numericInput("Sex",
label = "Sex",
value = 1),
numericInput("ChestPainType",
label = "Chest Pain Type",
value = 1),
numericInput("RestingBP",
label = "Resting Blood Pressure",
value = 140),
numericInput("Cholesterol",
label = "Cholesterol",
value = 289),
numericInput("FastingBS",
label = "Fasting Blood Sugar",
value = 0),
numericInput("RestingECG",
label = "Resting ECG Results",
value = 1),
numericInput("MaxHR",
label = "Max Heart Rate Achived",
value = 172),
numericInput("ExerciseAngina",
label = "Exercise Induced Angina",
value = 0),
numericInput("Oldpeak",
label = "ST Depression Induced by Exercise (Old Peak)",
value = 0),
numericInput("ST_Slope",
label = "Slope of Peak Exercise ST Segment",
value = 0),
actionButton("submitbutton", "Submit",
class = "btn btn-primary")
)
),
tabPanel("Random Forest", value = "tab3",
# Content for Tab 2
sidebarPanel(
#HTML("<h3>Input parameters</h3>"),
tags$label(h3('Random Forest')),
numericInput("Age",
label = "Age",
value = 40),
numericInput("Sex",
label = "Sex",
value = 1),
numericInput("ChestPainType",
label = "Chest Pain Type",
value = 1),
numericInput("RestingBP",
label = "Resting Blood Pressure",
value = 140),
numericInput("Cholesterol",
label = "Cholesterol",
value = 289),
numericInput("FastingBS",
label = "Fasting Blood Sugar",
value = 0),
numericInput("RestingECG",
label = "Resting ECG Results",
value = 1),
numericInput("MaxHR",
label = "Max Heart Rate Achived",
value = 172),
numericInput("ExerciseAngina",
label = "Exercise Induced Angina",
value = 0),
numericInput("Oldpeak",
label = "ST Depression Induced by Exercise (Old Peak)",
value = 0),
numericInput("ST_Slope",
label = "Slope of Peak Exercise ST Segment",
value = 0),
actionButton("submitbutton", "Submit",
class = "btn btn-primary")
)
),
tabPanel("Decision Tree", value = "tab4",
# Content for Tab 2
sidebarPanel(
#HTML("<h3>Input parameters</h3>"),
tags$label(h3('Decision Tree')),
numericInput("Age",
label = "Age",
value = 40),
numericInput("Sex",
label = "Sex",
value = 1),
numericInput("ChestPainType",
label = "Chest Pain Type",
value = 1),
numericInput("RestingBP",
label = "Resting Blood Pressure",
value = 140),
numericInput("Cholesterol",
label = "Cholesterol",
value = 289),
numericInput("FastingBS",
label = "Fasting Blood Sugar",
value = 0),
numericInput("RestingECG",
label = "Resting ECG Results",
value = 1),
numericInput("MaxHR",
label = "Max Heart Rate Achived",
value = 172),
numericInput("ExerciseAngina",
label = "Exercise Induced Angina",
value = 0),
numericInput("Oldpeak",
label = "ST Depression Induced by Exercise (Old Peak)",
value = 0),
numericInput("ST_Slope",
label = "Slope of Peak Exercise ST Segment",
value = 0),
actionButton("submitbutton", "Submit",
class = "btn btn-primary")
)
),
tabPanel("Ensemble", value = "tab5",
# Content for Tab 2
sidebarPanel(
#HTML("<h3>Input parameters</h3>"),
tags$label(h3('Ensemble')),
numericInput("Age",
label = "Age",
value = 40),
numericInput("Sex",
label = "Sex",
value = 1),
numericInput("ChestPainType",
label = "Chest Pain Type",
value = 1),
numericInput("RestingBP",
label = "Resting Blood Pressure",
value = 140),
numericInput("Cholesterol",
label = "Cholesterol",
value = 289),
numericInput("FastingBS",
label = "Fasting Blood Sugar",
value = 0),
numericInput("RestingECG",
label = "Resting ECG Results",
value = 1),
numericInput("MaxHR",
label = "Max Heart Rate Achived",
value = 172),
numericInput("ExerciseAngina",
label = "Exercise Induced Angina",
value = 0),
numericInput("Oldpeak",
label = "ST Depression Induced by Exercise (Old Peak)",
value = 0),
numericInput("ST_Slope",
label = "Slope of Peak Exercise ST Segment",
value = 0),
actionButton("submitbutton", "Submit",
class = "btn btn-primary")
)
),
tabPanel("Stats",
tags$img(src = "confusionmatrix.png",width = 600,height = 600, style = "margin-left: 50px; border: 2px solid black;margin-bottom: 500px;margin-top: 50px;"),
tags$img(src = "sensispeci.png",width = 700,height = 600,style = "margin-left: 100px; border: 2px solid black;margin-bottom: 500px;margin-top: 50px;")
),
mainPanel(
tags$label(h3('0 Heart is safe, 1 Heart is in Danger')), # Status/Output Text Box
verbatimTextOutput('contents'),
tableOutput('tabledata') # Prediction results table
)
)
server <- function(input, output, session) {
# Define the datasetInput reactive function
datasetInput <- function(tabname) {
df <- data.frame(
Name = c("Age",
"Sex",
"ChestPainType",
"RestingBP",
"Cholesterol",
"FastingBS",
"RestingECG",
"MaxHR",
"ExerciseAngina",
"Oldpeak",
"ST_Slope"),
Value = as.character(c(input$Age,
input$Sex,
input$ChestPainType,
input$RestingBP,
input$Cholesterol,
input$FastingBS,
input$RestingECG,
input$MaxHR,
input$ExerciseAngina,
input$Oldpeak,
input$ST_Slope)),
stringsAsFactors = FALSE)
Species <- 0
df <- rbind(df, Species)
input <- t(df)
write.table(input, "input.csv", sep = ",", quote = FALSE, row.names = FALSE, col.names = FALSE)
test <- read.csv(paste0("input", ".csv"), header = TRUE)
if(tabname == "AdaBoost"){
model = readRDS("ModelAda.rds")
}else if(tabname == "SupportVectorMachine"){
model = readRDS("ModelSVM.rds")
}else if(tabname == "RandomForest"){
model = readRDS("ModelRF.rds")
}else if(tabname == "DecisionTree"){
model = readRDS("ModelDT.rds")
}else if(tabname == "Ensemble"){
model = readRDS("ModelEN.rds")
}
Output <- data.frame(Prediction = predict(model, test))
print(tabname)
print(Output)
return(Output)
}
# Define the active model text
output$contents <- renderPrint({
if (input$submitbutton > 0) {
tabname <- switch(input$tabs,
"tab1" = "AdaBoost",
"tab2" = "SupportVectorMachine",
"tab3" = "RandomForest",
"tab4" = "DecisionTree",
"tab5" = "Ensemble")
isolate(paste("Active model:", tabname))
} else {
return("Server is ready for predictions")
}
})
# Define the table of prediction results
output$tabledata <- renderTable({
if (input$submitbutton > 0) {
tabname <- switch(input$tabs,
"tab1" = "AdaBoost",
"tab2" = "SupportVectorMachine",
"tab3" = "RandomForest",
"tab4" = "DecisionTree",
"tab5" = "Ensemble")
isolate(datasetInput(tabname))
}
})
}
shinyApp(ui = ui, server = server)
